cmake_minimum_required(VERSION 2.6)

project(GrandOrgue CXX C)

# Build configuration options
if (NOT DEFINED UNICODE)
   set(UNICODE OFF)
endif ()
if (NOT DEFINED RTAUDIO_USE_CORE)
  set(RTAUDIO_USE_CORE ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_JACK)
  set(RTAUDIO_USE_JACK ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_OSS)
  set(RTAUDIO_USE_OSS OFF)
endif ()
if (NOT DEFINED RTAUDIO_USE_ALSA)
  set(RTAUDIO_USE_ALSA ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_DSOUND)
  set(RTAUDIO_USE_DSOUND ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_ASIO)
  set(RTAUDIO_USE_ASIO ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_WMME)
  set(RTAUDIO_USE_WMME ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_WDMKS)
  set(RTAUDIO_USE_WDMKS ON)
endif ()
if (NOT DEFINED RTAUDIO_USE_WASAPI)
  set(RTAUDIO_USE_WASAPI ON)
endif ()
if (NOT DEFINED RTMIDI_USE_CORE)
  set(RTMIDI_USE_CORE ON)
endif ()
if (NOT DEFINED RTMIDI_USE_JACK)
  set(RTMIDI_USE_JACK ON)
endif ()
if (NOT DEFINED RTMIDI_USE_ALSA)
  set(RTMIDI_USE_ALSA ON)
endif ()
if (NOT DEFINED RTMIDI_USE_MM)
  set(RTMIDI_USE_MM ON)
endif ()
if (NOT DEFINED USE_INTERNAL_PORTAUDIO)
  set(USE_INTERNAL_PORTAUDIO ON)
endif ()
if (NOT DEFINED INSTALL_DEPEND)
  if(WIN32)
    set(INSTALL_DEPEND ON)
  else()  
    set(INSTALL_DEPEND OFF)
  endif ()
endif ()

# Project version numbers
set(VERSION_MAJOR 0)
set(VERSION_MINOR 3)
set(VERSION_STAGE 0)
set(VERSION_REVISION 3)
set(VERSION ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_STAGE}.${VERSION_REVISION})

if (CMAKE_BUILD_TYPE STREQUAL "")
   message(STATUS "No build configuration specified. Defaulting to 'Release' build.")
   set(CMAKE_BUILD_TYPE "Release")
endif ()

# only use options supported by the compiler
include(CheckCXXCompilerFlag)
include(CheckCXXSourceCompiles)
macro(add_option _option)
  set(_name "OPTION_${_option}")
  CHECK_CXX_COMPILER_FLAG("-${_option}" ${_name})
  if(${_name})
   add_definitions("-${_option}")
  endif()
endmacro(add_option option)

if(UNIX)
  install(FILES GrandOrgue.desktop DESTINATION share/applications)
  install(FILES GrandOrgue.png DESTINATION share/pixmaps)
endif()

# setup compiler flags for debug vs release compiles
add_option(ffast-math)
add_option(Wall)
if (CMAKE_BUILD_TYPE STREQUAL "Debug")
   add_option(g)
   add_option(O0)
   add_option(mmmx)
   add_option(msse)
   add_option(msse2)
   add_option(msse3)
   add_option(funit-at-a-time)
elseif (CMAKE_BUILD_TYPE STREQUAL "Release")
   add_option(fomit-frame-pointer)
   add_option(O3)
   add_option(mmmx)
   add_option(msse)
   add_option(msse2)
   add_option(msse3)
   add_option(funroll-loops)
   add_option(DNDEBUG)
endif ()

CHECK_CXX_SOURCE_COMPILES("int main() __attribute__((force_align_arg_pointer)); int main() { return 0; }" HAVE_REALIGN)
if (HAVE_REALIGN)
  set(REALIGN_EVENTS 1)
  set(REALIGN_ATTRIBUTE "__attribute__((force_align_arg_pointer))")
else()
  set(REALIGN_EVENTS 0)
  set(REALIGN_ATTRIBUTE "")
endif ()

# include RtAudio
add_subdirectory(src/rt lib/rt)
# include portaudio
if (USE_INTERNAL_PORTAUDIO)
  add_subdirectory(src/portaudio lib/portaudio)
endif()
add_subdirectory(src/grandorgue bin)
add_subdirectory(po)
add_subdirectory(help)

set(CPACK_PACKAGE_NAME "GrandOrgue")
set(CPACK_PACKAGE_VENDOR "Our Organ")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "GrandOrgue - OpenSource Virtual Pipe Organ Software")
set(CPACK_PACKAGE_VERSION ${VERSION})
set(CPACK_PACKAGE_VERSION_MAJOR ${VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${VERSION_STAGE}.${VERSION_REVISION})
set(CPACK_PACKAGE_INSTALL_DIRECTORY "GrandOrgue")
set(CPACK_RPM_PACKAGE_LICENSE "GPL v2+")
set(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_SOURCE_DIR}/license.txt)
set(CPACK_PACKAGE_CONTACT "ourorgan-developers@lists.sourceforge.net")
set(CPACK_STRIP_FILES true)
set(CPACK_PACKAGE_EXECUTABLES "GrandOrgue" "GrandOrgue")
include(CPack)

message(STATUS "  Project                     : ${PROJECT_NAME}")
message(STATUS "  Description                 : ${CPACK_PACKAGE_DESCRIPTION_SUMMARY}")
message(STATUS "  Version                     : ${VERSION}")
message(STATUS "============================================================================")
message(STATUS " ")
