<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book lang="en">
  <title>GrandOrgue Help</title>
  <titleabbrev>GrandOrgue</titleabbrev>
  <chapter>
    <title>Welcome</title>
    <para>
Welcome to the manual for GrandOrgue.
    </para>
    <itemizedlist mark="bullet">
      <listitem>
        <para>
Click the Contents tab to display a list of important topics about the
program.
	</para>
      </listitem>
      <listitem>
        <para>
Click the Index tab to display an alphabetical listing of topics.
	</para>
      </listitem>
      <listitem>
        <para>
Click the Search tab to search for a specific word in the help system.
	</para>
      </listitem>
    </itemizedlist>
  </chapter>
  <chapter>
    <title>Getting Started</title>
    <indexterm>
      <primary>Getting Started</primary>
    </indexterm>
    <sect1>
      <title>Introduction</title>
      <indexterm>
        <primary>Introduction</primary>
      </indexterm>
      <para>
GrandOrgue allows the user to load and play virtual pipe organs.
Using sample sets, GrandOrgue is able to combine the individual pipe
sounds and organ behaviours to simulate a variety of pipe organs.
      </para>
    </sect1>
    <sect1>
      <title>Sample Sets</title>
      <indexterm>
        <primary>Sample Sets</primary>
      </indexterm>
      <para>
GrandOrgue is capable of loading and faithfully reproducing a variety
of sample sets. Through extensive testing, it appears highly
compatible with definition files that have worked in Hauptwerk&#8482;
version 1. Other types of sample sets may also be compatible, and
other formats may soon be available. As such, you won't be able to do
anything at all with GrandOrgue without at least one sample
set. Sample sets generally come packaged or with installers. By
default, the software loads organs from "My Organs" in your documents
folder, but you may store sample sets wherever is convenient and space
permits.
      </para>
    </sect1>
    <sect1>
      <title>Features</title>
      <indexterm>
        <primary>Features</primary>
      </indexterm>
      <itemizedlist mark="bullet">
        <listitem>
          <para>
High definition output with supporting hardware
	  </para>
        </listitem>
        <listitem>
          <para>
Optimized MMX® core for extraordinary polyphony
	  </para>
        </listitem>
        <listitem>
          <para>
High precision internal processing for optimal sound quality
	  </para>
        </listitem>
        <listitem>
          <para>
Polyphony management to avoid CPU overload
	  </para>
        </listitem>
        <listitem>
          <para>
Low latency output with proper hardware support
	  </para>
        </listitem>
        <listitem>
          <para>
Quick and easy MIDI setup, including "Listen for Event"
	  </para>
        </listitem>
        <listitem>
          <para>
Lossless compression reduces RAM requirements by up to 40%
	  </para>
        </listitem>
        <listitem>
          <para>
Release sample enhancements for realistic sound
	  </para>
        </listitem>
        <listitem>
          <para>
All features and enhancements configurable
	  </para>
        </listitem>
        <listitem>
          <para>
High speed loading and caching of sample sets
	  </para>
        </listitem>
        <listitem>
          <para>
Save settings per sample set or export to settings files
	  </para>
        </listitem>
      </itemizedlist>
    </sect1>
    <sect1>
      <title>Requirements</title>
      <indexterm>
        <primary>Requirements</primary>
      </indexterm>
      <sect2>
        <title>All Platforms</title>
        <itemizedlist mark="bullet">
          <listitem>
            <para>
Pentium® II equivalent, or better
	    </para>
            <para>
              <emphasis>NOTE: A newer, faster processor will permit a higher
polyphony</emphasis>
            </para>
          </listitem>
          <listitem>
            <para>
Sufficient RAM to fully load the largest sample set you wish to use
	    </para>
          </listitem>
          <listitem>
            <para>
A hard disk (or other storage) with enough free space to store sample sets
	    </para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Microsoft® Windows®</title>
        <itemizedlist mark="bullet">
          <listitem>
            <para>
Windows® 2000, XP, or later
	    </para>
            <para>
              <emphasis>&gt;NOTE: Older versions are not supported, although the software may function properly</emphasis>
            </para>
          </listitem>
          <listitem>
            <para>
Sound card supporting DirectSound® and/or ASIO&#8482; (recommended)
	    </para>
          </listitem>
          <listitem>
            <para>
MIDI interface device or loopback driver
	    </para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
  </chapter>
  <chapter>
    <title>User Interface</title>
    <indexterm>
      <primary>User Interface</primary>
    </indexterm>
    <figure>
      <title>GrandOrgue User Interface</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="GrandOrgue.jpg"/>
        </imageobject>
      </mediaobject>
    </figure>
    <sect1>
      <title>Volume Control</title>
      <indexterm>
        <primary>Volume Control</primary>
      </indexterm>
      <para>
The volume control sets the volume control <emphasis>as a
percentage</emphasis> of full volume. Note that this is percentage of
voltage, and therefore every half corresponds to -6dB. That is, 50% is
-6dB, 25% is -12dB, etc. To the right of the spinner are the left and
right audio monitors, respectively. The clip indicator at the far
right will turn red if clipping occurs, and will stay red until the
volume is adjusted.
</para>
    </sect1>
    <sect1>
      <title>Polyphony Control</title>
      <indexterm>
        <primary>Polyphony Control</primary>
      </indexterm>
      <para>
The polyphony control sets the maximum polyphony before GrandOrgue
will refuse to play any additional samples. To oversimplify, polyphony
is the number of pipes that may sound simultaneously; but polyphony
may also be consumed when a key is released. It is recommended to
experiment with this setting initially, but leave it once you find an
acceptable setting. Your setting should balance between too little
polyphony (where you might not be able to play many notes on large
sample sets) and too much polyphony (where the CPU will overload and
artifacts will appear in the sound). Note that "wet" sample sets
(those with considerable reverberation) will consume polyphony many
seconds after the note is actually released. The default setting of
1024 should provide a reasonable starting point on a 1GHz CPU. To the
right of the spinner is the polyphony monitor. The clip indicator at
the far right will turn red if the polyphony limit has been reached,
and will stay red until the polyphony is adjusted.
</para>
    </sect1>
    <sect1>
      <title>Program Changes</title>
      <indexterm>
        <primary>Program Changes</primary>
      </indexterm>
      <para>
The spinner sets the current program number. This might be termed a
"sequencer" on modern computerized organs. It is possible to store up
to 512 organ states and access them sequentially via the predefined
MIDI events, or access any setting directly through the spinner. You
may also use the left and right keys on the keyboard to scroll through
the programs, and down to reactivate the current program (if you have
changed the stops since last activating it, for example). Note also
that when memory set is engaged, the target program wil be stored to,
i.e. if you push Shift + Right then the program would be advanced and
the current settings would be saved to this same next program.
</para>
    </sect1>
    <sect1>
      <title>Manuals</title>
      <indexterm>
        <primary>Manuals</primary>
      </indexterm>
      <para>
Each manual as well as the pedalboard is displayed in the center of
the screen. The keys are outlined when messages are received, but may
not be engaged by clicking the mouse. Right clicking on a manual will
open its corresponding MIDI Event Editor.
</para>
    </sect1>
    <sect1>
      <title>Expression Pedals</title>
      <indexterm>
        <primary>Expression Pedals</primary>
      </indexterm>
      <para>
Directly above the pedalboard are displayed the pedals, sometimes
referred to as "swell pedals", although they may control any of the
manuals (Great, Swell, Wonderful, etc). On a pipe organ, swell
shutters dampen the sound, and this is simulated in GrandOrgue by
adjusting the volume of the enclosed pipes. While the mouse is over a
pedal, you may use the mouse wheel to adjust its position, or right
click to open its corresponding MIDI Event Editor.
      </para>
    </sect1>
    <sect1>
      <title>Drawstops</title>
      <indexterm>
        <primary>Drawstops</primary>
      </indexterm>
      <para>
The drawstops engage or disengage various components of the organ when
clicked - generally new ranks of pipes which are applied to each
manual. Other drawstops may perform actions such as coupling one
manual to another. This deals with the functionality of pipe organs
and is beyond the scope of this documentation. Right clicking on a
drawstop will open its corresponding MIDI Event Editor. Any changes
made there may be saved in the organ definition file or settings
files.
</para>
    </sect1>
    <sect1>
      <title>Pistons</title>
      <indexterm>
        <primary>Pistons</primary>
      </indexterm>
      <para>
Pistons generally perform an action when clicked and do not have an
on/off toggle, although some pistons may toggle in this way. Pistons
often recall drawstop combinations, and when used in combination with
the Memory Set, you can store your own combinations in the
pistons. Right clicking on a piston will open its corresponding MIDI
Event Editor. Any changes made there may be saved in the organ
definition file or settings files.
      </para>
    </sect1>
  </chapter>
  <chapter>
    <title>File Menu</title>
    <indexterm>
      <primary>File Menu</primary>
    </indexterm>
    <para>
The File menu contains commands for dealing with the loading and
saving of sample sets.
    </para>
    <sect1>
      <title>Open</title>
      <indexterm>
        <primary>Open</primary>
      </indexterm>
      <para>
Import a sample set stored in a definition file. The location will be
remembered for the next open operation. The most recently used sample
sets are also remembered and available in the "Import Recent"
popup. Loading sample sets takes some time; a progress window will
display indicating estimated time remaining and other indicators. If
you open a new sample set which shares samples with the previously
loaded sample set, those files are cached and will not be reloaded
from disk.
      </para>
    </sect1>
    <sect1>
      <title>Reload</title>
      <indexterm>
        <primary>Reload</primary>
      </indexterm>
      <para>
Reload the currently loaded sample set from disk. This may be used to
quickly restore a sample set to its saved status, for example if a
settings file has been applied.
      </para>
    </sect1>
    <sect1 id="resettodefaults">
      <title>Reset to Defaults</title>
      <indexterm>
        <primary>Reset to Defaults</primary>
      </indexterm>
      <para>
Reset the currently loaded sample set to the settings as originally
supplied by the sample set provider. You will be asked to verify that
you wish to discard your modifications. Note that these settings are
stored at the end of the definition file and could be easily removed
with a text editor as well if necessary.
      </para>
    </sect1>
    <sect1>
      <title>Import Settings</title>
      <indexterm>
        <primary>Import Settings</primary>
      </indexterm>
      <para>
Apply a settings file to the currently loaded sample set. Note that
settings may only be applied to a matching sample set, and you will
receive a warning if you try to do otherwise. The location will be
remembered for the next time, independently of other saved locations.
</para>
    </sect1>
    <sect1>
      <title>Export Settings</title>
      <indexterm>
        <primary>Export Settings</primary>
      </indexterm>
      <para>
Save a settings file including the stop and piston MIDI messages; stop
engaged states; divisional, general, and program combinations; and the
volume.
      </para>
    </sect1>
    <sect1>
      <title>Update Cache</title>
      <indexterm>
        <primary>Update Cache</primary>
      </indexterm>
      <para>
Save the loaded and processed samples to the hard disk. Doing so
decreases loading time at the expense of hard disk space. Selecting
this option displays a message indicating how much space is required
and confirming that you would like to proceed. If compression is
disabled, load speed only increases by 10 to 15%. However, with
compression enabled, the load time when using the sample cache may be
cut by 40% or more.
      </para>
      <para>
Note that different load settings or tunings each require their own
cache file. For example, stereo compressed samples and mono
uncompressed samples each need their own cache. It is therefore
recommended that you limit your cache updates to one particular load
type (preferably stereo compressed, as this is the recommended
setting).
</para>
    </sect1>
    <sect1>
      <title>Save</title>
      <indexterm>
        <primary>Save</primary>
      </indexterm>
      <para>
Save to the definition file: the stop and piston MIDI messages; stop
engaged states; divisional, general, and program combinations; and the
volume. Note that this is completely reversible using the <link linkend="resettodefaults">Reset to Defaults</link> option, and is the
recommend method for most users.
      </para>
    </sect1>
    <sect1>
      <title>Close</title>
      <indexterm>
        <primary>Close</primary>
      </indexterm>
      <para>
Close the currently loaded sample set. If you have made any settings
changes, you will be asked if you would like to save them before the
sample set closes. Note that this will also unload the sample set and
free the RAM it required.
</para>
    </sect1>
    <sect1>
      <title>Properties</title>
      <indexterm>
        <primary>Properties</primary>
      </indexterm>
      <para>
This window displays various characteristics of the loaded sample set
as provided by the sample set producer. If available, there is also a
link to "More Information" which will open additional information in
another application.
      </para>
    </sect1>
  </chapter>
  <chapter>
    <title>Audio Menu</title>
    <indexterm>
      <primary>Audio Menu</primary>
    </indexterm>
    <para>
The Audio menu contains commands for dealing with loaded organs and
associated settings.
    </para>
    <sect1>
      <title>Record</title>
      <indexterm>
        <primary>Record</primary>
      </indexterm>
      <para>
Opens a dialog prompting where to save the recorded WAV file. The
location will be remembered for the next time, independently of other
saved locations. Upon clicking selecting a file name, recording
commences and continues until the Record menu option or toolbar button
is selected again.  A checkmark appears next to the menu item, and the
toolbar button remains pushed, to indicate when recording is active.
      </para>
    </sect1>
    <sect1>
      <title>Memory Set</title>
      <indexterm>
        <primary>Memory Set</primary>
      </indexterm>
      <para>
Enters memory set mode until the Memory Set menu option or toolbar
button is selected again. While the memory set is engaged, whenever
you push a divisional or general piston or activate a program change,
the organ will store the current settings to that piston or program
change rather than recalling them. For example, engaging a divisional
piston 1 during memory set will store the state of stops for that
manual into piston 1, which could then be pushed later (after memory
set has been disengaged) to recall those stops. A checkmark appears
next to the menu item, and the toolbar button remains pushed, to
indicate when memory set is active.
      </para>
    </sect1>
    <sect1>
      <title>Panic</title>
      <indexterm>
        <primary>Panic</primary>
      </indexterm>
      <para>
The effect of the panic button is to reset the sound, stopping all
sound and turning off all notes. It may also be quickly accessed on
the toolbar or via the Escape key. This should be generally
unnecessary, although it may be useful if you need to quickly stop the
sound output, or if the sound is breaking up due to CPU overload.
      </para>
    </sect1>
    <sect1>
      <title>Settings</title>
      <indexterm>
        <primary>Settings</primary>
      </indexterm>
      <para>
Displays a tabbed dialog containg the audio settings. For more
information, refer to the <link linkend="devicesettings">Device
Settings</link> and <link linkend="midisettings">MIDI Settings</link>
sections.
      </para>
    </sect1>
  </chapter>
  <chapter>
    <title>Help Menu</title>
    <indexterm>
      <primary>Help Menu</primary>
    </indexterm>
    <sect1>
      <title>Index</title>
      <indexterm>
        <primary>Index</primary>
      </indexterm>
      <para>
Opens this help document. Pressing F1 at other locations in the
program will jump directly to the appropriate topic.
      </para>
    </sect1>
    <sect1>
      <title>About</title>
      <indexterm>
        <primary>About</primary>
      </indexterm>
      <para>Displays the splash screen.</para>
    </sect1>
  </chapter>
  <chapter id="midisettings">
    <title>MIDI Settings</title>
    <indexterm>
      <primary>MIDI Settings</primary>
    </indexterm>
    <figure>
      <title>MIDI Settings dialog</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="GrandOrgueMIDI.gif"/>
        </imageobject>
      </mediaobject>
    </figure>
    <sect1>
      <title>MIDI Messages</title>
      <indexterm>
        <primary>MIDI Messages</primary>
      </indexterm>
      <para>
This screen lists all of the MIDI actions which GrandOrgue can respond
to. The "Action" column describes the action; the "Event" column shows
the MIDI event it is currently tied to; the "Channel" column indicates
which channel the action will listen on, if any; the "Data" column
indicates the specific data which will trigger the action - for
example, a controller number or a program change number. These actions
may be modified by selecting the action and clicking "Properties", or
by double-clicking on the action.
</para>
    </sect1>
    <sect1>
      <title>MIDI Event Properties</title>
      <indexterm>
        <primary>MIDI Event Properties</primary>
      </indexterm>
      <para>
This displays the MIDI event editor dialog. You may select an event
from the drop-down box (only available events will be shown), or you
may select "(none)" to disable the action. The channel spinner sets
the channel tied ot the MIDI message, and the data spinner (when
applicable) selects the data tied to the MIDI message. For easy
configuration, click "Listen for Event" and then perform the desired
MIDI action (i.e. push a note on the appropriate keyboard, do a
program change, flip a MIDI switch, etc). If the performed MIDI event
is allowed for this action, its data is filled in and the "Listen for
Event" button is deactivated. You may also manually deactivate the
listener by clicking on it again. Be sure to select OK to save your
changes when you're done.
      </para>
    </sect1>
  </chapter>
  <chapter id="devicesettings">
    <title>Device Settings</title>
    <indexterm>
      <primary>Device Settings</primary>
    </indexterm>
    <figure>
      <title>Device Settings dialog</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="GrandOrgueAudio.gif"/>
        </imageobject>
      </mediaobject>
    </figure>
    <sect1>
      <title>MIDI Input Devices</title>
      <indexterm>
        <primary>MIDI Input Devices</primary>
      </indexterm>
      <para>
A list of all MIDI input interfaces available. Selecting a device
means that GrandOrgue will listen for incoming MIDI messages on
through that interface. This allows to listen to more than one device
at a time; for example, to listen to both a controller and a sequencer
or loopback device.
      </para>
    </sect1>
    <sect1>
      <title>Advanced</title>
      <indexterm>
        <primary>Advanced</primary>
      </indexterm>
      <para>
Either select a device and click Advanced, or double click on the
device. This brings up a window that allows the setting of a channel
offset. A channel offset allows the use of two MIDI interfaces with
conflicting MIDI channels. For example, applying a channel offset of 8
to one of the MIDI interfaces would cause that interface's channel 1
to appear as channel 9, channel 2 to appear as channel 10, and so
on. This may be useful if you have multiple keyboards that are
configured to use the same channel.
</para>
    </sect1>
    <sect1>
      <title>Sound Output Device</title>
      <indexterm>
        <primary>Sound Output Device</primary>
      </indexterm>
      <para>
Provides a list of available sound output devices. Note that only one
device may be used for sound output at a time. Devices are prefixed by
their type, e.g. "ASIO", "DirectSound", etc.
      </para>
      <para><emphasis>NOTE:</emphasis> If an ASIO device does not appear, it may
be set to an incompatible format. The control panel for the ASIO
device must be set to 44.1kHz 16-bit sound.
</para>
    </sect1>
    <sect1>
      <title>Estimated Latency</title>
      <indexterm>
        <primary>Estimated Latency</primary>
      </indexterm>
      <para>
This allows you to set a <emphasis>requested</emphasis> latency, and
after you click OK or Apply, the sound system will determine tne
closest feasible latency and change the value to this
<emphasis>estimated</emphasis> latency. Note that the estimate is
based on numbers provided by the hardware and may vary. <emphasis>Many
ASIO devices do not allow you to change their latency except in their
control panel when the device is not in use.</emphasis> Refer to your
sound card documentation for more information. Note that use of third
party drivers, such as ASIO4All, may function properly but is not
supported.
      </para>
    </sect1>
    <sect1>
      <title>Load Stereo Samples</title>
      <indexterm>
        <primary>Load Stereo Samples</primary>
      </indexterm>
      <para>
If set to Mono, all samples are loaded in Mono. When compression is
disabled, this will save 50%, but when compression is enabled, much
less will be saved because the compression is much less effective on
monoaural inputs.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>Variable savings up to 50%</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Lossless Compression</title>
      <indexterm>
        <primary>Lossless Compression</primary>
      </indexterm>
      <para>
Uses a lossless algorithm (i.e. the original samples can be perfectly
reconstructed) so that RAM requirements are lessened. Particularly
useful for large sample sets.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>Variable savings up to 40%</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>Approx. 10% lower</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>Approx. 20% slower</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Active Polyphony Management</title>
      <indexterm>
        <primary>Active Polyphony Management</primary>
      </indexterm>
      <para>
When polyphony reaches 3/4 of the current maximum value, release
samples (reverberation tails) are faded out in order to conserve
polyphony.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>Conserved</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Release Sample Phase Alignment</title>
      <indexterm>
        <primary>Release Sample Phase Alignment</primary>
      </indexterm>
      <para>
When a note is released, phase cancellation may occur as the release
sample cross fades in. Selecting this option will make a best effort
to phase align the release sample to help minimize this effect.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Release Sample Detachment</title>
      <indexterm>
        <primary>Release Sample Detachment</primary>
      </indexterm>
      <para>
When a note is released, the tremulants or swell pedals would not
normally affect the reverberation, and therefore it is highly
recommended to leave this option engaged.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>Variable savings up to 50%</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>Slight impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Release Sample Scaling</title>
      <indexterm>
        <primary>Release Sample Scaling</primary>
      </indexterm>
      <para>
For those sample sets with long reverberation tails ("wet"), enabling
this option will fade out the release sample if the note is played
staccato. It will have little to no effect on "dry" sample sets.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>Slight impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Randomize Pipe Speaking</title>
      <indexterm>
        <primary>Randomize Pipe Speaking</primary>
      </indexterm>
      <para>
This will apply a very small (less than 1ms) random delay before each
pipe begins to speak. This may help combinations of stops to sound
more natural and less repetitive.
      </para>
      <variablelist>
        <varlistentry>
          <term>Memory</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Polyphony</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Load time</term>
          <listitem>
            <para>No impact</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
  </chapter>
  <chapter>
    <title>Frequently Asked Questions</title>
    <indexterm>
      <primary>Frequently Asked Questions</primary>
    </indexterm>
    <para>
This section will be populated once questions become frequently asked.
    </para>
  </chapter>
  <chapter>
    <title>The Grand Orgue file format</title>
    <sect1>
      <title>General information</title>
      <para>
It is an INI file in ISO-8859-1 encoding. The standard extension is
<emphasis>.organ</emphasis>.
 </para>
      <para>
Comment lines are started with <emphasis>;</emphasis>.  Empty lines are ignored.
 </para>
      <para>
Various settings are grouped in block. Each block is started with a
line starting with <emphasis>[</emphasis>, followed by the section name and ended with <emphasis>]</emphasis>.
Each block consists of list of name-values pairs seperated by <emphasis>=</emphasis>.
 </para>
      <para>
File paths in this format are relative to the location of the organ
file.  The directory seperator in this paths must be <emphasis>\</emphasis>. The paths
should not contain <emphasis>/</emphasis>. The paths should be considered case sensitiv,
even if it is not enforced on all plattforms.
 </para>
      <para>
 Boolean values are represented as <emphasis>Y</emphasis> for true and
 <emphasis>N</emphasis> for false.
 </para>
      <para>
A color can be one of the following colors (not case sensitive):
BLACK, BLUE, DARK BLUE, GREEN, DARK GREEN, CYAN, DARK CYAN, RED, DARK
RED, MAGENTA, DARK MAGENTA, YELLOW, DARK YELLOW, LIGHT GREY, DARK
GREY, WHITE
Additionally, it supported the HTML syntax #RRGGBB
</para>
      <para>
A font size can be one of the following values: SMALL, NORMAL, LARGE
or a number bigger than 0.
</para>
      <para>
The following image formats are supported: bmp, gif, jpg, ico, png
</para>
      <para>
Objects in GrandOrgue are eg. manuals, stops, generals, ... . Each
object can consist of backend part representing the object an its
configuration (eg. list of sample file names) and multiple GUI
representations.
 </para>
      <para>
The main section is called <emphasis>Organ</emphasis>. It defines the
main panel too. Objects like stops only displayed on a non-main panel
need an invisible definition for the backend part on the main panel
too.
      </para>
    </sect1>
    <sect1>
      <title>Sample format</title>
      <para>
The samples are stored as WAV files according to the WAV file
specification. The supported formats are: 8 bit, 16 bit and 24 bit
PCM, either mono or stereo. The prefered sample rates are 44100 or
48000 Hz - GO supports any sample rate between 22000 and 96000 Hz.  GO
only supports a single data chunk. To play looped samples, they must
include cue points (cue chunk) and loops (smpl chunk).
dwMIDIUnityNote and dwMIDIPitchFraction of the smpl chunk are used for
retuning an organ to other temperaments.
      </para>
    </sect1>
    <sect1>
      <title>Organ section</title>
      <para>
This section describes the whole organ including the main panel,
therefore the section includes all display metrics
attributes. Additionally it includes the following attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>HauptwerkOrganFileFormatVersion</term>
          <listitem>
            <para>
(string, required) Version information - ignored by GrandOrgue
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ChurchName</term>
          <listitem>
            <para>
(string, required) Name of the organ/church. This string should be
unique, as setting files for organs with the same
<emphasis>ChurchName</emphasis> are considered compatible.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ChurchAddress</term>
          <listitem>
            <para>
(string, required) informational text displayed in the property dialog
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>OrganBuilder</term>
          <listitem>
            <para>
(string, required) informational text displayed in the property dialog
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>OrganBuildDate</term>
          <listitem>
            <para>
(string, required) informational text displayed in the property dialog
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>OrganComments</term>
          <listitem>
            <para>
(string, required) informational text displayed in the property dialog
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>RecordingDetails</term>
          <listitem>
            <para>
(string, required) informational text displayed in the property dialog
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>InfoFilename</term>
          <listitem>
            <para>
(string, required) relative path to an html file with more information
about the organ.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfManuals</term>
          <listitem>
            <para>
(integer 1-6, required) number of manuals. The manual information is
available in sections called <emphasis>Manual999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HasPedals</term>
          <listitem>
            <para>
(boolean, required) Determines, if the pedal
(<emphasis>Manual000</emphasis>) is present.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfEnclosures</term>
          <listitem>
            <para>
(integer 0-6, required) number of enclosures. The details are in a section called
<emphasis>Enclosure999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfTremulants</term>
          <listitem>
            <para>
(integer 0-10, required) number of tremulants. The details are in a section called
<emphasis>Tremualant999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfWindchestGroups</term>
          <listitem>
            <para>
(integer 1-12, required) number of windchests. The details are in a section called
<emphasis>WindchestGroup999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfReversiblePistons</term>
          <listitem>
            <para>
(integer 0-32, required) number of pistons. The details are in a section called
<emphasis>ReversiblePiston999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfGenerals</term>
          <listitem>
            <para>
(integer 0-99, required) number of generals. The details are in a section called
<emphasis>General999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfDivisionalCouplers</term>
          <listitem>
            <para>
(integer 0-8, required) number of divisional couplers. The details are in a section called
<emphasis>DivisionalCoupler999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfPanels</term>
          <listitem>
            <para>
(integer 0-100, required) number of additional panels. The details are
in a section called <emphasis>Panel999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DivisionalsStoreIntermanualCouplers</term>
          <listitem>
            <para>
(boolean, required) determines, if divisionals store/change the
state of associated intramanual coupler.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DivisionalsStoreIntramanualCouplers</term>
          <listitem>
            <para>
(boolean, required) determines, if divisionals store/change the
state of associated intermanual coupler.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DivisionalsStoreTremulants</term>
          <listitem>
            <para>
(boolean, required) determines, if divisionals store/change the
state of associated tremulants.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>GeneralsStoreDivisionalCouplers</term>
          <listitem>
            <para>
(boolean, required) determines, if divisionals store/change the
state of divisional coupler.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>CombinationsStoreNonDisplayedDrawstops</term>
          <listitem>
            <para>
(boolean, required) determines, if the state of (on the main panel)
invisible objects is stored in divisionals, generals and the setter.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfImages</term>
          <listitem>
            <para>
(integer 0-999, default: 0) Number of images on the panel. The section
of the label GUI definitions are called
<emphasis>Image999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfSetterElements</term>
          <listitem>
            <para>
(integer 0-999, default: 0) Number of
setter elements on the panel. The section of the GUI definitions are
called <emphasis>SetterElement999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfLabels</term>
          <listitem>
            <para>
(integer 0-999, required) Number of labels on the panel. The section
of the label GUI definitions are called
<emphasis>Label999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>AmplitudeLevel</term>
          <listitem>
            <para>
(float 0-1000, default: 100) Linear amplitude scale factor applied to
the whole organ. 100 means no change.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PitchTuning</term>
          <listitem>
            <para>
(float -1200-1200, default: 0) Retune the whole organ the specified
number of cents.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Manual objects</title>
      <para>
A manual is associated with a number of stops, tremulants, divisionals
and coupler. The accessible range can be played via MIDI, the rest of
the logical keys can only be triggered by (octave) coupler. It
contains the following non-gui attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>Name</term>
          <listitem>
            <para>
(string, required) Name of the manual
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfLogicalKeys</term>
          <listitem>
            <para>
(integer 1-192, required) Number of keys on this manuals (including
non playable ones).
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>FirstAccessibleKeyLogicalKeyNumber</term>
          <listitem>
            <para>
(integer 1 - NumberOfLogicalKeys, required) number of the first
useable key
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>FirstAccessibleKeyMIDINoteNumber</term>
          <listitem>
            <para>
(integer 0 - 127, required) MIDI note number of the first MIDI acessible key.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfAccessibleKeys</term>
          <listitem>
            <para>
(intger 0 - 85, required) number of MIDI accessible keys.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MIDIInputNumber</term>
          <listitem>
            <para>
(integer 1-6, required) This number is used while building the initial
MIDI configuration to map the manual to one midi setting from the global
midi configuration dialog.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Displayed</term>
          <listitem>
            <para>
(boolean, required) If true, the manual is visible on the main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfStops</term>
          <listitem>
            <para>
(integer 0-64, required) Number of stops associated with this
manual. Starting with 1, for each stop, there is a
<emphasis>Stop999</emphasis> setting.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Stop999</term>
          <listitem>
            <para>
(integer, required) Number of the <emphasis>Stop999</emphasis> section
containg the stop details.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfCouplers</term>
          <listitem>
            <para>
(integer 0-16, required) Number of couplers associated with this
manual. Starting with 1, for each coupler, there is a
<emphasis>Coupler999</emphasis> setting.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Coupler999</term>
          <listitem>
            <para>
(integer, required) Number of the <emphasis>Coupler999</emphasis>
section containg the coupler details.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfDivisionals</term>
          <listitem>
            <para>
(integer 0-32, required) Number of divisionals associated with this
manual. Starting with 1, for each divisional, there is a
<emphasis>Divisional999</emphasis> setting.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Divisional999</term>
          <listitem>
            <para>
(integer, required) Number of the <emphasis>Divisional999</emphasis>
section containg the coupler details.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfTremulants</term>
          <listitem>
            <para>
(integer 0-10, required) Number of tremulants associated with this
manual. Starting with 1, for each tremulant, there is a
<emphasis>Tremulant999</emphasis> setting.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Tremulant999</term>
          <listitem>
            <para>
(integer, required) Number of the <emphasis>Tremulant999</emphasis>
section containg the tremulant details.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
If the manual is display, it contains the following gui attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>DispKeyColourInverted</term>
          <listitem>
            <para>
(boolean, required) True means, the <emphasis>black</emphasis> keys are drawn
in a light color while the <emphasis>white</emphasis> keys are draw dark color.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispKeyColourWooden</term>
          <listitem>
            <para>
(boolean, default: false) True means, that a wood background is used
for the keys.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Label objects</title>
      <para>
Lable object allow to display a text label. The background is an image.
It is tiled, if the image is smaller than the label area. A label has the following attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>FreeXPlacement</term>
          <listitem>
            <para>
(boolean, default: true) True means, that the X position is determined
by DispXpos, else by DispDrawstopCol and DispSpanDrawstopColToRight.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>FreeYPlacement</term>
          <listitem>
            <para>
(boolean, default: true) True means, that the Y position is determined
by DispYpos, else by DispAtTopOfDrawstopCol.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispXpos</term>
          <listitem>
            <para>
(integer 0-panel width, default: 0) absolute X position
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispYpos</term>
          <listitem>
            <para>
(integer 0-panel height, default: 0) absolute Y position
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispAtTopOfDrawstopCol</term>
          <listitem>
            <para>
(boolean, required if FreeYPlacement is true) If true, the lable is
display above the drawstop, else below.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispDrawstopCol</term>
          <listitem>
            <para>
(integer 1- number of drawstop columns, required if FreeXPlacement is
false) Position label at the specified drawstop column.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispSpanDrawstopColToRight</term>
          <listitem>
            <para>
(boolean, required if FreeXPlacement is false) If true, move label half of the drawstop
with right.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispLabelColour</term>
          <listitem>
            <para>
(color, default: black) Color for the label text.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispLabelFontSize</term>
          <listitem>
            <para>
(font size, default: normal) Size of the label font
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DisplLabelFontName</term>
          <listitem>
            <para>
(string, default: empty) Font for the text. Empty means use the
group label font of the panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Name</term>
          <listitem>
            <para>
	    (string, default: empty) The text to display on this object
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispImageNum</term>
          <listitem>
            <para>
(integer 1-1, default: 1) Builtin bitmap set to use.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Image</term>
          <listitem>
            <para>
(string, default: use internal bitmap according to DispImageNum)
Specifiy the file name of an image to use as bitmap.  If the bitmap
contains a mask for transparency, it will be used.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Mask</term>
          <listitem>
            <para>
(string, default: empty) File name for a external mask for the
bitmap. If empty, no mask is added.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PositionX</term>
          <listitem>
            <para>
(integer 0 - panel width, default: according to the definitions above) Allow
to override X position for button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PositionY</term>
          <listitem>
            <para>
(integer 0 - panel height, default: according to defintions above) Allow
to override Y position for button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Width</term>
          <listitem>
            <para>
(integer 0 - panel width, default: bitmap width) Width of the
button. If larger than the bitmap, the bitmap is tiled.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Height</term>
          <listitem>
            <para>
(integer 0 - panel height, default: bitmap height) Height of the
button. If larger than the bitmap, the bitmap is tiled.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TileOffsetX</term>
          <listitem>
            <para>
(integer 0 - bitmap width, default: 0) X position on the bitmap of the
left pixel of the button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TileOffsetY</term>
          <listitem>
            <para>
(integer 0 - bitmap width, default: 0) Y position on the bitmap of the
top pixel of the button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectLeft</term>
          <listitem>
            <para>
(integer 0 - Height, default: 0) relative X of left core of the text
rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectTop</term>
          <listitem>
            <para>
(integer 0 - Height, default: 0) relative Y of left core of the text
rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectWidth</term>
          <listitem>
            <para>
(integer 0 - Width, default: Width) width of the text rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectHeight</term>
          <listitem>
            <para>
(integer 0 - Height, default: Height) height of the text rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextBreakWidth</term>
          <listitem>
            <para>
(integer 0 - text rectangle width, default: Width) If 0, no text is
displayed. Otherwise the value specified the maximum line length used
for text breaking.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Image objects</title>
      <para>
Images objects allow to display an image on a panel. They tile the images,
if it is bigger then image size. It has the following attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>Image</term>
          <listitem>
            <para>
(string, required) Specifiy the file name of an image to use as on
bitmap. If the bitmap contains a mask for transparency, it will be
used.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Mask</term>
          <listitem>
            <para>
(string, default: empty) File name for a external mask for the
bitmap. If empty, no mask is added.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PositionX</term>
          <listitem>
            <para>
(integer 0 - panel width, default: 0) X coordinate of the left side.
to override X position for button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PositionY</term>
          <listitem>
            <para>
(integer 0 - panel height, default: 0) Y coordinate of the left side.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Width</term>
          <listitem>
            <para>
(integer 0 - panel width, default: bitmap width) Width of the
button. If larger than the bitmap, the bitmap is tiled.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Height</term>
          <listitem>
            <para>
(integer 0 - panel height, default: bitmap height) Height of the
button. If larger than the bitmap, the bitmap is tiled.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TileOffsetX</term>
          <listitem>
            <para>
(integer 0 - bitmap width, default: 0) X position on the bitmap of the
left pixel of the button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TileOffsetY</term>
          <listitem>
            <para>
(integer 0 - bitmap width, default: 0) Y position on the bitmap of the
top pixel of the button
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Button objects</title>
      <para>
Button objects are defined on the main panel. Their section name
is based on their function. They share the following common properties:
</para>
      <variablelist>
        <varlistentry>
          <term>Name</term>
          <listitem>
            <para>
	    (string, required) Name of the object. The name may be
	    presented the user in lists too, therefore it should be
	    descriptive.  If a GUI representations requires a shorter
	    name, please override this value locally.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Displayed</term>
          <listitem>
            <para>
(boolean, required) If true, the sections also includes the GUI
properties for the main panel. Otherwise it is not displayed on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DisplayInInvertedState</term>
          <listitem>
            <para>
(boolean, default: false) If true, off is displayed as on and on as
off.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>StopControlMIDIKeyNumber</term>
          <listitem>
            <para>
(integer 0-127, default: no MIDI event specified) Only used for building the initial configuration during
the first load - provided just for HW1 compatibility.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MIDIProgramChangeNumber</term>
          <listitem>
            <para>
(int 1-128, default: no MIDI event specified) Only used for building the initial configuration during
the first load - provided just for HW1 compatibility. 
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
The GUI properties of button objects are:
</para>
      <variablelist>
        <varlistentry>
          <term>DisplayAsPiston</term>
          <listitem>
            <para>
(boolean, default: true for divisionals, generals and pistons, else
false) True means to display as button, false as drawstop
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ShortcutKey</term>
          <listitem>
            <para>
(integer 0-255, default: 0) 0 means no shortcut, else it specifies the
key code of the shortcut key.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispLabelColour</term>
          <listitem>
            <para>
(color, default: Dark Red) Color for the label text.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispLabelFontSize</term>
          <listitem>
            <para>
(font size, default: normal) Size of the label font
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DisplLabelFontName</term>
          <listitem>
            <para>
(string, default: empty) Font for the text. Empty means use the
control label font of the panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispLabelText</term>
          <listitem>
            <para>
(string, default: Name of the button) Content of the text label. You
should set it, if you need to display a shorter string on the label.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispKeyLabelOnLeft</term>
          <listitem>
            <para>
(boolean, default: true) If displayed as a piston and this attribute
is false, move it a little bit left.  Otherwise ignored.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispImageNum</term>
          <listitem>
            <para>
(integer 1-2, default: 1) Builtin bitmap set to use. GrandOrgue has
two for drawstops and two for pistons.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispButtonRow</term>
          <listitem>
            <para>
(button row, default: 1) If displayed as piston, it contains the
button row according to the layout modell.  Otherwise ignored.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispButtonCol</term>
          <listitem>
            <para>
(button column, default: 1) If displayed as piston, it contains the
button column according to the layout modell.  Otherwise ignored.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispDrawstopRow</term>
          <listitem>
            <para>
(drawstop row, default: 1) If displayed as drawstop, it contains the
drawstop row according to the layout modell.  Otherwise ignored.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DispDrawstopCol</term>
          <listitem>
            <para>
(drawstop column, default: 1) If displayed as drawstop, it contains
the drawstop column according to the layout modell.  Otherwise
ignored.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ImageOn</term>
          <listitem>
            <para>
(string, default: use internal bitmap according to DispImageNum)
Specifiy the file name of an image to use as on bitmap.  If the bitmap
contains a mask for transparency, it will be used.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ImageOff</term>
          <listitem>
            <para>
(string, default: use internal bitmap according to DispImageNum)
Specifiy the file name of an image to use as off bitmap. If the bitmap
contains a mask for transparency, it will be used. The size must match
the on bitmap.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MaskOn</term>
          <listitem>
            <para>
(string, default: empty) File name for a external mask for the on
bitmap. If empty, no mask is added.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MaskOff</term>
          <listitem>
            <para>
(string, default: value of MaskOn) File name for a external mask for
the off bitmap. If empty, no mask is added.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PositionX</term>
          <listitem>
            <para>
(integer 0 - panel width, default: according to layout modell) Allow
to override X position for button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PositionY</term>
          <listitem>
            <para>
(integer 0 - panel height, default: according to layout modell) Allow
to override Y position for button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Width</term>
          <listitem>
            <para>
(integer 0 - panel width, default: bitmap width) Width of the
button. If larger than the bitmap, the bitmap is tiled.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Height</term>
          <listitem>
            <para>
(integer 0 - panel height, default: bitmap height) Height of the
button. If larger than the bitmap, the bitmap is tiled.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TileOffsetX</term>
          <listitem>
            <para>
(integer 0 - bitmap width, default: 0) X position on the bitmap of the
left pixel of the button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TileOffsetY</term>
          <listitem>
            <para>
(integer 0 - bitmap width, default: 0) Y position on the bitmap of the
top pixel of the button
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MouseRectLeft</term>
          <listitem>
            <para>
(integer 0 - Width, default: 0) relative X of left core of the mouse
rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MouseRectTop</term>
          <listitem>
            <para>
(integer 0 - Height, default: 0) relative Y of left core of the mouse
rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MouseRectWidth</term>
          <listitem>
            <para>
(integer 0 - Width, default: Width) width of the mouse rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MouseRectHeight</term>
          <listitem>
            <para>
(integer 0 - Height, default: Height) height of the mouse rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>MouseRadius</term>
          <listitem>
            <para>
(integer 0 - max(MouseRectHeight, MouseRectWidth), default:
max(MouseRectHeight, MouseRectWidth) / 2) If 0, the mouse events are
captured inside the mouse rectangle. Otherwise they must be inside a
circle of the specified size too.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectLeft</term>
          <listitem>
            <para>
(integer 0 - Height, default: 0) relative X of left core of the text
rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectTop</term>
          <listitem>
            <para>
(integer 0 - Height, default: 0) relative Y of left core of the text
rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectWidth</term>
          <listitem>
            <para>
(integer 0 - Width, default: Width) width of the text rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextRectHeight</term>
          <listitem>
            <para>
(integer 0 - Height, default: Height) height of the text rectangle
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>TextBreakWidth</term>
          <listitem>
            <para>
(integer 0 - text rectangle width, default: a little bit smaller than
Width) If 0, no text is displayed. Otherwise the value specified the
maximum line length used for text breaking.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
Inside the button, the on/off bitmap (depending on the button state)
is tiled. If a text width is set, a text label is displayed on
it. Mouse events are only captured inside the mouse rectangle.
</para>
    </sect1>
    <sect1>
      <title>Drawstop objects</title>
      <para>
Drawstop objects are buttons with toogle functions. They contain these
additional non-GUI properties:
      </para>
      <variablelist>
        <varlistentry>
          <term>DefaultToEngaged</term>
          <listitem>
            <para>
(boolean, required) State of the button after loading.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Stop objects</title>
      <para>
Stop are drawstop objects. A stop consists of a number of pipes. Only
the accessible pipes can be triggered from the manual. They have the
following additions attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>AmplitudeLevel</term>
          <listitem>
            <para>
(float 0-1000, default: 100) Linear amplitude scale factor applied to
the whole stop. 100 means no change.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PitchTuning</term>
          <listitem>
            <para>
(float -1200-1200, default: 0) Retune the stop organ the specified
number of cents.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HarmonicNumber</term>
          <listitem>
            <para>
(float 1-1024, default: 8) Harmonic number (= 64 / stop size), eg. 2
2/3 =&gt; 64 / (2 2/3) = 24.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PitchCorrection</term>
          <listitem>
            <para>
(float -1200-1200, default: 0) Correction factor in cent for the pitch
specified in the sample. This setting is used for retuning to other
temperaments.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfLogicalPipes</term>
          <listitem>
            <para>
(integer 1-192, required) Number of pipes in this stop
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>FirstAccessiblePipeLogicalPipeNumber</term>
          <listitem>
            <para>
(integer 1 - NumberOfLogicalPipes, required) The number of the first
pipe accessible from the manual.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>irstAccessiblePipeLogicalKeyNumber</term>
          <listitem>
            <para>
(integer 1-128, required) The key number on the manual of the first
accessible pipe.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfAccessiblePipes</term>
          <listitem>
            <para>
(integer 1 - NumberOfLogicalPipes, required) Number of pipes, that are
playable from the manual starting from the first acessible pipe.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WindchestGroup</term>
          <listitem>
            <para>
(interger 1 - number of windchests, required) specify the windchest,
on which the pipes of the are placed.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Percussive</term>
          <listitem>
            <para>
(boolean, required) If false, the samples are played as is (without
any loop/release handling)
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
The stop section contains the attributes of each of its pipes too.
The attribute of each pipe are prefixed with
<emphasis>Pipe999</emphasis> (number starting with 1). The supported
attributes are:
      </para>
      <variablelist>
        <varlistentry>
          <term>Pipe999AmplitudeLevel</term>
          <listitem>
            <para>
(float 0-1000, default: 100) Linear amplitude scale factor applied to
the pipe (in addition to the organ/stop factor). 100 means no change.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Pipe999PitchTuning</term>
          <listitem>
            <para>
(float -1200-1200, default: 0) Retune this pipe the specified
number of cents (in addition to the organ/stop factor).
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Pipe999</term>
          <listitem>
            <para>
(string, required) Relative path to the sample WAV file.
The contain may be REF:aa:bb:cc too. In that case, it means
that this stop borrows from manual aa, stop bb the pipe cc.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Pipe999HarmonicNumber</term>
          <listitem>
            <para>
(float 1-1024, default: 8) Harmonic number (= 64 / stop size), eg. 2
2/3 =&gt; 64 / (2 2/3) = 24.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Pipe999PitchCorrection</term>
          <listitem>
            <para>
(float -1200-1200, default: 0) Correction factor in cent for the pitch
specified in the sample. This setting is used for retuning to other
temperaments.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Pushbutton objects</title>
      <para>
Pushbuttons are buttons without any state. It is displayed as piston.
      </para>
    </sect1>
    <sect1>
      <title>Piston objects</title>
      <para>
A piston is a pushbutton which trigger other elements. It contains the
following additional attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>ObjecType</term>
          <listitem>
            <para>
(string, required) Type of the element to trigger. Value can be STOP,
COUPLER or TREMULANT.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ManualNumber</term>
          <listitem>
            <para>
(integer first manual index - last manual index, required for stops
and coupler) The manual, to which the referenced object belongs.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ObjectNumber</term>
          <listitem>
            <para>
(integer, required) Determines the number of the object. Depending on
the object it must be a valid stop/coupler number on the referenced
manual or a valid global tremulant number.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Tremulant objects</title>
      <para>
Trelmulants are drawstop objects with the following additions attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>Period</term>
          <listitem>
            <para>
(integer 32-44100, required) Period of the tremulant in ms
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>StartRate</term>
          <listitem>
            <para>
(integer 1-100, required) Determines the startup time of the tremulant.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>StopRate</term>
          <listitem>
            <para>
(integer 1-100, required) Determines the startup time of the tremulant.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>AmpModDepth</term>
          <listitem>
            <para>
(integer 1-100, required) Determines, how much the volume will be changed.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Windchest objects</title>
      <para>
Windchest objects represent a windchest, on which pipes of stops are placed.
It has the following attributes:
      </para>
      <variablelist>
        <varlistentry>
          <term>Comment</term>
          <listitem>
            <para>
(string, default: empty string) Description of this windchest
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfEnclosures</term>
          <listitem>
            <para>
(integer 0 - enclosure count, required) Number of enclosures, which
influnce this windchest. The list is specifed by the
<emphasis>Enclosure999</emphasis> entries in the windchest section.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfTremulants</term>
          <listitem>
            <para>
(integer 0 - tremulant count, required) Number of tremulants, which
influence this windchest. The list is specifed by the
<emphasis>Tremulant999</emphasis> entries in the windchest section.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Enclosure999</term>
          <listitem>
            <para>
(integer 1 - enclosure count, required) Number of an enclosure, which
influence this windchest.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Tremulant999</term>
          <listitem>
            <para>
(integer 1 - tremulant count, required) Number of an tremulant, which
influence this windchest.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
    <sect1>
      <title>Additional panels</title>
      <para>
It is possible to define additional panels. The section is call
<emphasis>Panel999</emphasis> with a number starting from 001.  All
panels use the same layout engine as the main panel, therefore the
section includes all display metrics attributes. Additionally it
includes the following attributes:
</para>
      <variablelist>
        <varlistentry>
          <term>Name</term>
          <listitem>
            <para>
(string, required) Name of the panel
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Group</term>
          <listitem>
            <para>
(string, default: empty) If not empty, place it in the submenu with
the specified name, else directly in the panel menu.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfManuals</term>
          <listitem>
            <para>
(integer 1 - number of defined manuals) number of manuals to display on this panel
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>HasPedals</term>
          <listitem>
            <para>
(boolean, required) Includes a manual displayed as pedal
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfSetterElements</term>
          <listitem>
            <para>
(integer 0-999, default: 0) Number of
setter elements on the panel. The section of the GUI definitions are
called <emphasis>Panel999SetterElement999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfEnclosures</term>
          <listitem>
            <para>
(integer 0 - number of defined enclosures, required) Number of
enclosures on the panel. The section of the stops GUI definitions are
called <emphasis>Panel999Enclosure999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Enclosure999</term>
          <listitem>
            <para>
(valid enclosure number, required) Reference to the encolsure on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfTremulants</term>
          <listitem>
            <para>
(integer 0 - number of defined tremulants, required) Number of
tremulant on the panel. The section of the tremulants GUI definitions
are called <emphasis>Panel999Tremulant999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Tremulant999</term>
          <listitem>
            <para>
(valid tremulant number, required) Reference to the tremulant on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfReversiblePistons</term>
          <listitem>
            <para>
(integer 0 - number of defined reversible pistons, required) Number of
reversible pistons on the panel. The section of the reversible pistons
GUI definitions are called
<emphasis>Panel999ReversiblePiston999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>ReversiblePiston999</term>
          <listitem>
            <para>
(valid reversible piston number, required) Reference to the reversible
piston on the main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfGenerals</term>
          <listitem>
            <para>
(integer 0 - number of defined generals, required) Number of generals
on the panel. The section of the generals GUI definitions are called
<emphasis>Panel999General999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>General999</term>
          <listitem>
            <para>
(valid general number, required) Reference to the general on the main
panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfDivisionalCouplers</term>
          <listitem>
            <para>
(integer 0 - number of defined divisional couplers, required) Number
of divisional couplers on the panel. The section of the divisional
coupler GUI definitions are called
<emphasis>Panel999DivisionalCoupler999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>DivisionalCoupler999</term>
          <listitem>
            <para>
(valid divisional coupler number, required) Reference to the divisional coupler on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Manual999</term>
          <listitem>
            <para>
(valid manual number, required) Number of the manual to use a
specified manual on the panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfStops</term>
          <listitem>
            <para>
(integer 0-999, required) Number of stops on the panel. The
section of the stops GUI definitions are called
<emphasis>Panel999Stop999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Stop999Manual</term>
          <listitem>
            <para>
(valid manual number, required) Reference to the manual of the
stop on the main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Stop999</term>
          <listitem>
            <para>
(valid stop number, required) Reference to the stop on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfCouplers</term>
          <listitem>
            <para>
(integer 0-999, required) Number of couplers on the panel. The
section of the couplers GUI definitions are called
<emphasis>Panel999Coupler999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Coupler999Manual</term>
          <listitem>
            <para>
(valid manual number, required) Reference to the manual of the
coupler on the main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Divisional999</term>
          <listitem>
            <para>
(valid coupler number, required) Reference to the divisional on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfDivisionals</term>
          <listitem>
            <para>
(integer 0-999, required) Number of divisionals on the panel. The
section of the divisionals GUI definitions are called
<emphasis>Panel999Divisional999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Divisional999Manual</term>
          <listitem>
            <para>
(valid manual number, required) Reference to the manual of the
divisional on the main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Divisional999</term>
          <listitem>
            <para>
(valid divisional number, required) Reference to the divisional on the
main panel.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfLabels</term>
          <listitem>
            <para>
(integer 0-999, required) Number of labels on the panel. The section
of the label GUI definitions are called
<emphasis>Panel999Label999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>NumberOfImages</term>
          <listitem>
            <para>
(integer 0-999, required) Number of images on the panel. The section
of the label GUI definitions are called
<emphasis>Panel999Image999</emphasis>.
	    </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect1>
  </chapter>
  <chapter>
    <title>Technical Support</title>
    <indexterm>
      <primary>Technical Support</primary>
    </indexterm>
    <para>
GrandOrgue is an open source project distributed under the GNU General
Public License. For information, comments, questions, or problems,
please visit the project pages on sourceforge.
    </para>
  </chapter>
  <chapter>
    <title>History</title>
    <indexterm>
      <primary>History</primary>
    </indexterm>
    <para>
GrandOrgue is a project based on a previous GNU GPL project with a
very similar that that has been discontinued.
    </para>
    <sect1>
      <title>0.1.0 (2009-06-7)</title>
      <itemizedlist mark="bullet">
        <listitem>
          <para>
Initial release of this new branch of virtual pipe organ based on
<emphasis>..Organ</emphasis>.
	  </para>
        </listitem>
      </itemizedlist>
    </sect1>
  </chapter>
  <chapter>
    <title>License</title>
    <para>
GrandOrgue - free pipe organ simulator
    </para>
    <para>
Copyright 2006 Milan Digital Audio LLC
Copyright 2009-2011 GrandOrgue contributors (see AUTHORS)
    </para>
    <para>
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of the
License, or (at your option) any later version.
    </para>
    <para>
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
    </para>
    <para>
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
MA 02111-1307, USA.
    </para>
  </chapter>
</book>
